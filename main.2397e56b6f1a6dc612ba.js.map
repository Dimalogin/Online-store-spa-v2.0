{"version":3,"file":"main.2397e56b6f1a6dc612ba.js","mappings":"mBAEY,ICSG,MAMb,WAAAA,GALA,KAAAC,2BAAyD,CACvDC,UAAW,WACXC,cAAe,YAIfC,SAASC,iBAAiB,oBAAoB,KAC5CC,KAAKC,SAAS,KAAK,IAGrBC,OAAOH,iBAAiB,WAAYC,KAAKG,OAC3C,CAEA,MAAAA,GACEC,QAAQC,IAAI,OACd,CAEA,QAAAJ,CAASK,GAKP,MAAMC,EACJL,OAAOM,SAASR,KAAKL,2BAA2BE,eAAeY,MAAM,GAEvEL,QAAQC,IAAIE,GAEZ,MAAMG,EAA4C,CAChDC,KAAM,GACNC,SAAU,IAGND,EAAOJ,EAAUM,MAAM,KAE7BT,QAAQC,IAAIM,IAEXD,EAAOC,KAAO,GAAID,EAAOE,SAAW,IAAMD,EAE3CP,QAAQC,IAAIK,EAGd,E","sources":["webpack://online-store-spa-v2.0/./src/index.ts","webpack://online-store-spa-v2.0/./src/scripts/app.ts"],"sourcesContent":["import App from \"./scripts/app\";\n\nconst app = new App();\n","// Types\n\nexport type HistoryRouterHandlerParams = {\n  nameEvent: string;\n  locationField: \"pathname\";\n};\nexport type HistoryRouterHandlerRequestParams = {\n  path: string;\n  resource: string;\n};\n\nexport default class App {\n  historyRouterHandlerParams: HistoryRouterHandlerParams = {\n    nameEvent: \"popstate\",\n    locationField: \"pathname\",\n  };\n\n  constructor() {\n    document.addEventListener(\"DOMContentLoaded\", () => {\n      this.navigate(null);\n    });\n\n    window.addEventListener(\"popstate\", this.newNav);\n  }\n\n  newNav() {\n    console.log(\"link\");\n  }\n\n  navigate(url: string | null) {\n    if (typeof url === \"string\") {\n      // this.setHistory(url);\n    }\n\n    const urlString =\n      window.location[this.historyRouterHandlerParams.locationField].slice(1);\n\n    console.log(urlString);\n\n    const result: HistoryRouterHandlerRequestParams = {\n      path: \"\",\n      resource: \"\",\n    };\n\n    const path = urlString.split(\"/\");\n\n    console.log(path);\n\n    [result.path = \"\", result.resource = \"\"] = path;\n\n    console.log(result);\n\n    //this.#callback!(result);\n  }\n}\n"],"names":["constructor","historyRouterHandlerParams","nameEvent","locationField","document","addEventListener","this","navigate","window","newNav","console","log","url","urlString","location","slice","result","path","resource","split"],"sourceRoot":""}